FROM docker.io/library/alpine:3.18 as template-builder

ARG RUNTIME_IDENTIFIER=linux-musl-x64

RUN apk add bash curl icu-libs krb5-libs libgcc libintl libssl1.1 libstdc++ zlib clang build-base zlib-dev

ENV DOTNET_ROOT /dotnet
ENV PATH "/dotnet:$PATH"

RUN curl -sSL https://dot.net/v1/dotnet-install.sh | bash -s -- --channel 8.0 --quality preview --install-dir /dotnet/

COPY ./src/Tools/NginxTemplateCustomizer/ /NginxTemplateCustomizer/

RUN dotnet restore /NginxTemplateCustomizer/; \
    dotnet publish /NginxTemplateCustomizer/ --configuration "Release" --self-contained --runtime "${RUNTIME_IDENTIFIER}" --output /NginxTemplateCustomizer/out

FROM docker.io/library/alpine:3.18 as host

ENV SERVER_PORT 80
ENV PROXY_PASS_URI http://localhost:5000

RUN apk add brotli nginx nginx-mod-http-brotli bash

COPY ./nginx/nginx-entry.sh /
COPY --from=template-builder /NginxTemplateCustomizer/out/nginxcustomizer /tmp/nginxcustomizer
COPY ./nginx/nginx.conf /etc/nginx/http.d/default.conf

RUN chmod +x /nginx-entry.sh

CMD ["/bin/bash", "-c", "/nginx-entry.sh"]
