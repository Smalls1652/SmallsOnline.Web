FROM mcr.microsoft.com/dotnet/sdk:8.0 as build-env

ENV NODE_MAJOR=20

RUN apt-get update; \
    apt-get install -y ca-certificates curl gnupg; \
    mkdir -p /etc/apt/keyrings; \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg; \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list; \
    apt-get update; \
    apt-get install -y nodejs python3 libc++1 libatomic1; \
    curl -qL https://www.npmjs.com/install.sh | sh ;\
    apt-get clean

# Temporary workaround for installing the bleeding edge release of .NET 8
# RUN curl -sSL https://dot.net/v1/dotnet-install.sh | bash -s -- --channel 8.0 --quality daily --no-cdn --install-dir /usr/share/dotnet/; \
#    dotnet --version

RUN dotnet tool install --global PowerShell; \
    dotnet workload install wasm-tools

WORKDIR /app
COPY ./cleanBuildOutput.ps1 ./
COPY ./nuget.config /
COPY ./src/Css/ ./src/Css/
COPY ./src/Lib/ ./src/Lib/
COPY ./src/Lib.Components/ ./src/Lib.Components/
COPY ./src/Lib.Services/ ./src/Lib.Services/
COPY ./src/PublicSite/ ./src/PublicSite/

RUN dotnet msbuild ./src/PublicSite/Server/ -t:"InitProject_Combined"; \
    dotnet restore ./src/PublicSite/Server/; \
    dotnet publish ./src/PublicSite/Server/ --configuration Release --output out

FROM mcr.microsoft.com/dotnet/aspnet:8.0-jammy-chiseled

# Temporary workaround for installing the bleeding edge release of .NET 8
# RUN apt-get update; \
#    apt-get install -y curl
# RUN curl -sSL https://dot.net/v1/dotnet-install.sh | bash -s -- --channel 8.0 --quality daily --no-cdn --install-dir /usr/share/dotnet/; \
#    dotnet --version

WORKDIR /app

COPY --from=build-env /app/out .
ENTRYPOINT [ "dotnet", "SmallsOnline.Web.PublicSite.Server.dll" ]
EXPOSE 8080