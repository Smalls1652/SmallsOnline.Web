name: "Publish container"

on:
  workflow_call:
    inputs:
      image_name:
        type: string
        description: "The name of the image to build and push."

permissions:
  contents: read
  packages: write

jobs:
  build_and_push:
    name: "Build and push"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Create image name string variants"
        id: image_name_variants
        shell: pwsh
        run: |
          "lowercase=$("${{ inputs.image_name }}".ToLower())" >> $env:GITHUB_OUTPUT

      - name: "Setup .NET SDK"
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: "Configure GitHub NuGet package source"
        shell: pwsh
        run: |
          dotnet nuget add source --name "github" --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: "Install .NET tools"
        run: |
          dotnet tool restore

      - name: "Update project files with gitversion"
        run: |
          dotnet tool run dotnet-gitversion /updateprojectfiles

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Log into container registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Generate Docker metadata"
        id: image_metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.actor }}/smallsonline-${{ steps.image_name_variants.outputs.lowercase }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: "Build and push container image to registry"
        uses: docker/build-push-action@v6
        with:
          context: ./
          push: true
          file: ./Dockerfile.${{ inputs.image_name }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.image_metadata.outputs.tags }}
          labels: ${{ steps.image_metadata.outputs.labels }}
