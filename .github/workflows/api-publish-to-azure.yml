name: API / Publish to Azure

on:
  # Automatically trigger it when detected changes in repo
  # for tagged releases matching 'v*.*.*'
  push:
    tags: [ 'v*.*.*', 'v*.*.*-*' ]
  # Push nightly builds
  # Should only pull from the latest tag
  schedule:
    - cron: '0 0 * * *'
  # Allow manual trigger 
  workflow_dispatch: 
    inputs:
      on_latest_tag:
        description: 'Run on the latest tag only.'
        required: false
        type: boolean

jobs:
    build:
      runs-on: ubuntu-latest

      steps:
        - name: 'Checkout: Fetch all history'
          uses: actions/checkout@v3
          if: ${{ github.event_name == 'schedule' || inputs.on_latest_tag == true }}
          with:
            fetch-depth: 0

        - name: Get latest tag
          if: ${{ github.event_name == 'schedule' || inputs.on_latest_tag == true }}
          id: get_latest_tag
          run: echo "latest_tag=$(git describe --abbrev=0 --tags 'main')" >> $GITHUB_ENV

        - name: 'Checkout: Latest tag'
          uses: actions/checkout@v3
          if: ${{ github.event_name == 'schedule' || inputs.on_latest_tag == true }}
          with:
            ref: ${{ env.latest_tag }}
            submodules: true

        - name: 'Checkout: Latest commit'
          uses: actions/checkout@v3
          if: ${{ inputs.on_latest_tag != true && github.event_name != 'schedule' }}
          with:
            submodules: true

        - name: Get current ticks
          id: get_current_ticks
          shell: pwsh
          run: |
            $currentDateTimeTicks = [System.DateTimeOffset]::Now.UtcTicks
            "current_datetime_ticks=$($currentDateTimeTicks)" >> $env:GITHUB_ENV

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to container registry
          uses: docker/login-action@v2
          with:
            registry: smallsonlinecontainerreg.azurecr.io
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

        - name: Set ref name (Latest tag)
          if: ${{ github.event_name == 'schedule' || inputs.on_latest_tag == true }}
          shell: pwsh
          id: set-ref-name-tag
          run: |
            "ref_name=$(`"${{ env.latest_tag }}`")" >> $env:GITHUB_ENV

        - name: Set ref name (Latest commit)
          if: ${{ inputs.on_latest_tag != true && github.event_name != 'schedule' }}
          shell: pwsh
          id: set-ref-name-commit
          run: |
            "ref_name=$(`"${{ github.ref_name }}`")" >> $env:GITHUB_ENV

        - name: Build and push container image to registry
          uses: docker/build-push-action@v3
          with:
            push: true
            tags: smallsonlinecontainerreg.azurecr.io/smallsonline-api:${{ env.ref_name }}_${{ env.current_datetime_ticks }}
            file: ./Dockerfile.api
            context: ./

        - name: Azure Login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_SMALLSONLINEAPI_CREDENTIALS }}

        - name: Deploy to containerapp
          uses: azure/CLI@v1
          with:
            inlineScript: |
              az config set extension.use_dynamic_install=yes_without_prompt
              az containerapp registry set -n smallsonline-api -g smalls-online-api --server smallsonlinecontainerreg.azurecr.io --username  ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
              az containerapp update --resource-group smalls-online-api --name smallsonline-api --image smallsonlinecontainerreg.azurecr.io/smallsonline-api:${{ env.ref_name }}_${{ env.current_datetime_ticks }} --revision-suffix "${{ env.current_datetime_ticks }}"