# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: Build and deploy to Azure Web App

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  # for tagged releases matching 'v*.*.*'
  push:
    tags: [ 'v*.*.*' ]
  # Push nightly builds
  # Should only pull from the latest tag
  schedule:
    - cron: '0 0 * * *'
  # Allow manual trigger 
  workflow_dispatch: 
    inputs:
      on_latest_tag:
        description: 'Run on the latest tag only.'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Job options'
        run: echo "Event - ${{ github.event_name }} / On latest tag - ${{ inputs.on_latest_tag }}"
          
      - name: 'Checkout: Fetch all history'
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'schedule' || inputs.on_latest_tag == true }}
        with:
          fetch-depth: 0

      - name: Get latest tag
        if: ${{ github.event_name == 'schedule' || inputs.on_latest_tag == true }}
        id: get_latest_tag
        run: echo "latest_tag=$(git describe --abbrev=0 --tags 'dev')" >> $GITHUB_OUTPUT

      - name: 'Checkout: Latest tag'
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'schedule' || inputs.on_latest_tag == true }}
        with:
          ref: ${{ steps.get_latest_tag.outputs.latest_tag }}

      - name: 'Checkout: Latest commit'
        uses: actions/checkout@v3
        if: ${{ inputs.on_latest_tag != true && github.event_name != 'schedule' }}

      - name: Setup dotnet SDK
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
          source-url: https://nuget.pkg.github.com/Smalls1652/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Initialize web app project
        run: dotnet msbuild -t:"InitProject_Combined"
        working-directory: "src/SmallsOnline.Web.PublicSite/Client/"

      - name: Install wasm-tools
        run: dotnet workload install wasm-tools

      - name: Build with dotnet
        run: dotnet build --configuration Release
        working-directory: "src/SmallsOnline.Web.PublicSite/Server/"

      - name: dotnet publish
        run: dotnet publish --configuration Release -o ${{env.DOTNET_ROOT}}/build
        working-directory: "src/SmallsOnline.Web.PublicSite/Server/"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'smallsonline-webapp'
          slot-name: 'production'
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_2f029dc2f1c7478589ccc3dac600c6fe }}
          package: .