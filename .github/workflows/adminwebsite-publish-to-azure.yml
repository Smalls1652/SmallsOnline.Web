name: AdminSite / Publish to Azure

on:
  # Automatically trigger it when detected changes in repo
  # for tagged releases matching 'v*.*.*'
  push:
    tags: [ 'v*.*.*', 'v*.*.*-*' ]
  # Allow manual trigger 
  workflow_dispatch: 
    inputs:
      on_latest_tag:
        description: 'Run on the latest tag only.'
        required: false
        type: boolean

jobs:
    build:
      runs-on: ubuntu-latest

      steps:
        - name: "Checkout GitHub Action"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Get current ticks
          id: get_current_ticks
          shell: pwsh
          run: |
            $currentDateTimeTicks = [System.DateTimeOffset]::Now.UtcTicks
            "current_datetime_ticks=$($currentDateTimeTicks)" >> $env:GITHUB_ENV

        - name: Setup .NET SDK
          uses: actions/setup-dotnet@v3
          with:
            global-json-file: global.json

        - name: Install .NET tools
          run: dotnet tool restore

        - name: Update project files with gitversion
          run: dotnet tool run dotnet-gitversion /updateprojectfiles

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to container registry
          uses: docker/login-action@v3
          with:
            registry: smallsonlinecontainerreg.azurecr.io
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

        - name: Generate Docker metadata
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: smallsonlinecontainerreg.azurecr.io/smallsonline-adminsite
            tags: |
              type=ref,event=tag
              type=ref,event=branch
              type=sha
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}

        - name: Get image tag
          id: imagetag
          shell: pwsh
          run: |
            $metaData = $env:DOCKER_METADATA_OUTPUT_JSON | ConvertFrom-Json
            $imageTag = $metaData.tags | Where-Object { $PSItem -like "*:v*" }
            "IMAGETAG=$($imageTag)" >> $env:GITHUB_ENV

        - name: Build and push container image to registry
          uses: docker/build-push-action@v5
          with:
            push: true
            file: ./Dockerfile.adminsite
            context: ./
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

        - name: Azure Login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_SMALLSONLINEADMINSITE_CREDENTIALS }}
  
        - name: Deploy to containerapp
          uses: azure/CLI@v1
          with:
            inlineScript: |
              az config set extension.use_dynamic_install=yes_without_prompt
              az containerapp registry set --name ${{ secrets.AZURE_SMALLSONLINEADMIN_NAME }} --resource-group ${{ secrets.AZURE_SMALLSONLINEADMIN_RG }} --server smallsonlinecontainerreg.azurecr.io --username  ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
              az containerapp update --resource-group ${{ secrets.AZURE_SMALLSONLINEADMIN_RG }} --name ${{ secrets.AZURE_SMALLSONLINEADMIN_NAME }} --image ${{ env.IMAGETAG }} --revision-suffix "-${{ env.current_datetime_ticks }}"
            